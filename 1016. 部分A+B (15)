正整数A的“DA（为1位整数）部分”定义为由A中所有DA组成的新整数PA。例如：给定A = 3862767，DA = 6，则A的“6部分”PA是66，因为A中有2个6。

现给定A、DA、B、DB，请编写程序计算PA + PB。

输入格式：

输入在一行中依次给出A、DA、B、DB，中间以空格分隔，其中0 < A, B < 1010。

输出格式：

在一行中输出PA + PB的值。

输入样例1：
3862767 6 13530293 3
输出样例1：
399
输入样例2：
3862767 1 13530293 8
输出样例2：
0
#include <string>
#include <iostream>
#include <vector>
#include <algorithm>
#include <math.h>
using namespace std;


int main(){
  int i,sa=0,sb=0,suma=0,sumb=0;
  string a, b;
  char da, db;
  cin >> a>>da>>b>>db;
  for (i = 0; i < a.size(); i++){
    if (a[i] == da)
      sa++;
  }
  for (i = 0; i < b.size(); i++){
    if (b[i] == db)
      sb++;
  }
  for (i = 0; i < sa; i++){
    suma += (da - '0')*pow(10, i);
  }
  for (i = 0; i < sb; i++){
    sumb += (db - '0')*pow(10, i);
  }
  cout << suma + sumb;
  system("pause");
  return 0;
}
