大家应该都会玩“锤子剪刀布”的游戏：两人同时给出手势，胜负规则如图所示：


现给出两人的交锋记录，请统计双方的胜、平、负次数，并且给出双方分别出什么手势的胜算最大。

输入格式：

输入第1行给出正整数N（<=105），即双方交锋的次数。随后N行，每行给出一次交锋的信息，即甲、乙双方同时给出的的手势。C代表“锤子”、J代表“剪刀”、B代表“布”，第1个字母代表甲方，第2个代表乙方，中间有1个空格。

输出格式：

输出第1、2行分别给出甲、乙的胜、平、负次数，数字间以1个空格分隔。第3行给出两个字母，分别代表甲、乙获胜次数最多的手势，中间有1个空格。如果解不唯一，则输出按字母序最小的解。

输入样例：
10
C J
J B
C B
B B
B C
C C
C B
J B
B C
J J
输出样例：
5 3 2
2 3 5
B B

#include <string>
#include <iostream>
#include <vector>
#include <algorithm>
#include <math.h>
using namespace std;
class player{
public:
  int win, lost, draw, cw, jw, bw;
};
char max(int a, int b, int c){
  if (c >= a){
    if (c >= b)
      return 'B';
    else
      return 'J';
  }
  else{
    if (a >= b)
      return 'C';
    else
      return 'J';
  }
}
int main(){
  player *a = new player();
  player *b = new player();
  char buff_a, buff_b;
  int i, n;
  cin >> n;
  for (i = 0; i < n; i++){
    cin >> buff_a >> buff_b;
    if (buff_a == buff_b){
      a->draw++;
      b->draw++;
    }
    else{
      if (buff_a == 'C'&&buff_b == 'J'){
        a->win++;
        b->lost++;
        a->cw++;
      }
      else if (buff_a == 'C'&&buff_b == 'B')
      {
        a->lost++;
        b->win++;
        b->bw++;
      }
      else if (buff_a == 'J'&&buff_b == 'C'){
        a->lost++;
        b->win++;
        b->cw++;
      }
      else if (buff_a == 'J'&&buff_b == 'B'){
        a->win++;
        b->lost++;
        a->jw++;
      }
      else if (buff_a == 'B'&&buff_b == 'C'){
        a->win++;
        b->lost++;
        a->bw++;
      }
      else{
        a->lost++;
        b->win++;
        b->jw++;
      }
    }
  }
  cout << a->win << " " << a->draw << " " << a->lost << endl;
  cout << b->win << " " << b->draw << " " << b->lost << endl;
  cout << max(a->cw, a->jw, a->bw) << " " << max(b->cw, b->jw, b->bw);
  system("pause");
  return 0;
}
