科学计数法是科学家用来表示很大或很小的数字的一种方便的方法，其满足正则表达式[+-][1-9]"."[0-9]+E[+-][0-9]+，即数字的整数部分只有1位，小数部分至少有1位，该数字及其指数部分的正负号即使对正数也必定明确给出。

现以科学计数法的格式给出实数A，请编写程序按普通数字表示法输出A，并保证所有有效位都被保留。

输入格式：

每个输入包含1个测试用例，即一个以科学计数法表示的实数A。该数字的存储长度不超过9999字节，且其指数的绝对值不超过9999。

输出格式：

对每个测试用例，在一行中按普通数字表示法输出A，并保证所有有效位都被保留，包括末尾的0。

输入样例1：
+1.23400E-03
输出样例1：
0.00123400
输入样例2：
-1.2E+10
输出样例2：
-12000000000
#include<iostream>
#include<string>
#include <vector>
#include <algorithm>
#include <math.h>
#include <sstream>
#include <functional>
#include<iomanip>
using namespace std;
int main() {
	string str, base, index;
	int i,int_index;
	char index_mark;
	stringstream buff_str;
	cin >> str;
	string::size_type pos;
	pos = str.find_first_of('E');
	base = str.substr(0, pos);
	index = str.substr(pos + 1, str.size());
	index_mark = index[0];
	index.erase(0, 1);
	buff_str << index;
	buff_str >> int_index;
	if (base[0] == '-')
		cout << '-';
	base.erase(0, 1);
	if (int_index == 0) {
		cout << base;
		system("pause");
		return 0;
	}
	base.erase(1, 1);
	if (index_mark == '+') {
		if (int_index+1 > base.size()) {//小数点的位置，要加零
			cout << base;
			for (i = 0; i < int_index+1 - base.size(); i++)
				cout << 0;
		}
		else if (int_index + 1 < base.size()) {//不用加零
			for (i = 0; i < int_index + 1; i++)
				cout << base[i];
			cout << ".";
			for (; i < base.size(); i++)
				cout << base[i];
		}
		else
			cout << base;
	}
	else if (index_mark == '-') {
		cout << "0.";
		for (i = 0; i < int_index - 1; i++)
			cout << 0;
		cout << base;
	}
	system("pause");
	return 0;
}
