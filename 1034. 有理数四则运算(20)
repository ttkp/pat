本题要求编写程序，计算2个有理数的和、差、积、商。

输入格式：

输入在一行中按照“a1/b1 a2/b2”的格式给出两个分数形式的有理数，其中分子和分母全是整型范围内的整数，负号只可能出现在分子前，分母不为0。

输出格式：

分别在4行中按照“有理数1 运算符 有理数2 = 结果”的格式顺序输出2个有理数的和、差、积、商。注意输出的每个有理数必须是该有理数的最简形式“k a/b”，其中k是整数部分，a/b是最简分数部分；若为负数，则须加括号；若除法分母为0，则输出“Inf”。题目保证正确的输出中没有超过整型范围的整数。

输入样例1：
2/3 -4/2
输出样例1：
2/3 + (-2) = (-1 1/3)
2/3 - (-2) = 2 2/3
2/3 * (-2) = (-1 1/3)
2/3 / (-2) = (-1/3)
输入样例2：
5/3 0/6
输出样例2：
1 2/3 + 0 = 1 2/3
1 2/3 - 0 = 1 2/3
1 2/3 * 0 = 0
1 2/3 / 0 = Inf

#include<iostream>
#include<string>
#include <vector>
#include <algorithm>
#include <math.h>
#include <sstream>
#include <functional>
#include<iomanip>
using namespace std;
void transform(string &str, long &num) {
	stringstream inter;
	inter << str;
	inter >> num;
	inter.clear();
}
void splict(string str, long &inta, long &intb) {
	long pos, mark;
	string parta, partb;
	if (str[0] == '-') {
		mark = -1;
		str.erase(0, 1);
	}
	else
		mark = 1;
	pos = str.find_first_of("/");
	parta = str.substr(0, pos);
	transform(parta, inta);
	partb = str.substr(pos + 1);
	transform(partb, intb);
	inta *= mark;
}
long divisor(long a, long b) {
	long  max, min, r;
	if (a < 0)
		a = -a;
	if (a > b) {
		max = a;
		min = b;
	}
	else {
		max = b;
		min = a;
	}
	r = max%min;
	while (r) {
		max = min;
		min = r;
		r = max%min;
	}
	return min;
}
void output(long a, long b) {
	if (a) {
		long d = divisor(a, b);
		long x, y;
		a /= d;
		b /= d;
		x = a%b;
		y = a / b;
		if (!(x)) {
			if (a < 0) {
				cout << "(" << y << ")";
			}
			else if (a == 0)
				cout << 0;
			else
				cout <<y;
		}
		else {
			if (a < 0) {
				cout << "(";
				if (abs(y) >= 1) {
					cout << a / b << " ";
					cout << abs(x) << "/" << b;
				}
				else
					cout << a << "/" << b;
				cout << ")";
			}
			else {
				if (y >= 1) {
					cout << y << " ";
					cout << x << "/" << b;
				}
				else
					cout << a << "/" << b;
			}

		}
	}
	else {
		cout << 0;
	}
}
void add(long a1, long a2, long b1, long b2) {
	output(a1, a2);
	cout << " " << "+" << " ";
	output(b1, b2);
	cout << " " << "=" << " ";
	output(a1*b2 + a2*b1, a2*b2);
	cout << endl;
}
void sub(long a1, long a2, long b1, long b2) {
	output(a1, a2);
	cout << " " << "-" << " ";
	output(b1, b2);
	cout << " " << "=" << " ";
	output(a1*b2 - a2*b1, a2*b2);
	cout << endl;
}
void muilt(long a1, long a2, long b1, long b2) {
	output(a1, a2);
	cout << " " << "*" << " ";
	output(b1, b2);
	cout << " " << "=" << " ";
	output(a1*b1, a2*b2);
	cout << endl;
}
void divide(long a1, long a2, long b1, long b2) {
	output(a1, a2);
	cout << " " << "/" << " ";
	output(b1, b2);
	cout << " " << "=" << " ";
	if (b1 == 0) {
		cout << "Inf";
	}
	else {
		if (b1 < 0) {
			b2 = -b2;
			b1 = -b1;
		}
		output(a1*b2, a2*b1);
	}

}
int main() {
	string a, b, str_a1, str_a2, str_b1, str_b2;
	long int_a1, int_a2, int_b1, int_b2, pos, mark;
	cin >> a >> b;
	splict(a, int_a1, int_a2);
	splict(b, int_b1, int_b2);
	add(int_a1, int_a2, int_b1, int_b2);
	sub(int_a1, int_a2, int_b1, int_b2);
	muilt(int_a1, int_a2, int_b1, int_b2);
	divide(int_a1, int_a2, int_b1, int_b2);
	system("pause");
	return 0;
}
