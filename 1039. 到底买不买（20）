小红想买些珠子做一串自己喜欢的珠串。卖珠子的摊主有很多串五颜六色的珠串，但是不肯把任何一串拆散了卖。于是小红要你帮忙判断一下，某串珠子里是否包含了全部自己想要的珠子？如果是，那么告诉她有多少多余的珠子；如果不是，那么告诉她缺了多少珠子。

为方便起见，我们用[0-9]、[a-z]、[A-Z]范围内的字符来表示颜色。例如在图1中，第3串是小红想做的珠串；那么第1串可以买，因为包含了全部她想要的珠子，还多了8颗不需要的珠子；第2串不能买，因为没有黑色珠子，并且少了一颗红色的珠子。


图 1
输入格式：

每个输入包含1个测试用例。每个测试用例分别在2行中先后给出摊主的珠串和小红想做的珠串，两串都不超过1000个珠子。

输出格式：

如果可以买，则在一行中输出“Yes”以及有多少多余的珠子；如果不可以买，则在一行中输出“No”以及缺了多少珠子。其间以1个空格分隔。

输入样例1：
ppRYYGrrYBR2258
YrR8RrY
输出样例1：
Yes 8
输入样例2：
ppRYYGrrYB225
YrR8RrY
输出样例2：
No 2

#include<iostream>
#include<string>
#include <vector>
#include <algorithm>
#include <math.h>
#include <sstream>
#include <functional>
#include<iomanip>
using namespace std;
int main() {
	vector<int> shop(100, 0),custom(100,0);
	string s1, s2;
	int i,flag=0,need=0;
	cin >> s1>>s2;
	for (i = 0; i < s1.size(); i++) {
		shop[s1[i] - '0']++;
	}
	for (i = 0; i < s2.size(); i++) {
		custom[s2[i] - '0']++;
	}
	for (i = 0; i < s2.size(); i++) {
		if (custom[s2[i] - '0'] > shop[s2[i] - '0']) {
			flag = 1;
			need+= custom[s2[i] - '0'] - shop[s2[i] - '0'];
			custom[s2[i] - '0'] = 0;
		}
	}
	if (flag)
		cout << "No" << " " << need;
	else
		cout << "Yes" << " " << s1.size() - s2.size();
	system("pause");
	return 0;
}


别人写的，解决了我的问题。
#include<iostream>
#include<string>
#include <vector>
#include <algorithm>
#include <math.h>
#include <sstream>
#include <functional>
#include<iomanip>
#include<map>
using namespace std;
int main(void) {
	string str_solder, str_buyer;
	map<char, int> solder;
	map<char, int> buyer;
	cin >> str_solder >> str_buyer;
	for (auto c : str_solder)
		++solder[c];
	for (auto c : str_buyer)
		++buyer[c];

	int lack = 0;
	auto p = buyer.begin();
	while (p!=buyer.end() ){
		if (p->second>solder[p->first])
			lack += (p->second - solder[p->first]);
		p++;
	}
	if (lack == 0)
		cout << "Yes " << (str_solder.size() - str_buyer.size());
	else
		cout << "No " << lack;
	system("pause");
}
