字符串APPAPT中包含了两个单词“PAT”，其中第一个PAT是第2位(P),第4位(A),第6位(T)；第二个PAT是第3位(P),第4位(A),第6位(T)。

现给定字符串，问一共可以形成多少个PAT？

输入格式：

输入只有一行，包含一个字符串，长度不超过105，只包含P、A、T三种字母。

输出格式：

在一行中输出给定字符串中包含多少个PAT。由于结果可能比较大，只输出对1000000007取余数的结果。

输入样例：
APPAPT
输出样例：
2

#include<iostream>
#include<string>
#include <vector>
#include <algorithm>
#include <math.h>
#include <sstream>
#include <functional>
#include<iomanip>
#include<map>
using namespace std;
int main(void) {
	//收别人启发，第一个记录P的次数，第二个记录PA的次数，第三个记录pat的次数
	map<char, long> pat = { { 'P',0 },{ 'A',0 },{ 'T',0 } };
	string str;
	cin >> str;
	int i, j = 0, sum = 0;
	for (i = 0; i < str.size(); i++) {
		if (str[i] == 'P') {
			pat[str[i]]++;
		}
		else if (str[i] == 'A') {
			pat[str[i]] += pat['P'];
		}
		else {
			pat[str[i]] += pat['A'];
			pat['T']=pat[str[i]]% 1000000007;
		}
	}
	cout << pat['T'];
	system("pause");
	return 0;
}
