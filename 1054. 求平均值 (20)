本题的基本要求非常简单：给定N个实数，计算它们的平均值。但复杂的是有些输入数据可能是非法的。一个“合法”的输入是[-1000，1000]区间内的实数，并且最多精确到小数点后2位。当你计算平均值的时候，不能把那些非法的数据算在内。

输入格式：

输入第一行给出正整数N（<=100）。随后一行给出N个正整数，数字间以一个空格分隔。

输出格式：

对每个非法输入，在一行中输出“ERROR: X is not a legal number”，其中X是输入。最后在一行中输出结果：“The average of K numbers is Y”，其中K是合法输入的个数，Y是它们的平均值，精确到小数点后2位。如果平均值无法计算，则用“Undefined”替换Y。如果K为1，则输出“The average of 1 number is Y”。

输入样例1：
7
5 -3.2 aaa 9999 2.3.4 7.123 2.35
输出样例1：
ERROR: aaa is not a legal number
ERROR: 9999 is not a legal number
ERROR: 2.3.4 is not a legal number
ERROR: 7.123 is not a legal number
The average of 3 numbers is 1.38
输入样例2：
2
aaa -9999
输出样例2：
ERROR: aaa is not a legal number
ERROR: -9999 is not a legal number
The average of 0 numbers is Undefined

#include <iostream>
#include<string>
#include<vector>
#include<sstream>
using namespace std;
bool if_dot(char c){
	if (c == '.')
		return true;
	return false;
}
bool if_num(string str,int pos){
	int i,dot=0;
	for (i = pos; i < str.size(); i++){
		if (if_dot(str[i])&&dot<1){
			if (str.size() - i-1 <= 2){
				dot++;
			}
			else
				return false;
		}
		else if (str[i]<'0' || str[i]>'9')
			return false;
	}
	return true;
}
bool if_negative(char c){
	if (c == '-')
		return true;
	return false;
}
bool if_zero(char c){
	if (c == '0')
		return true;
	return false;
}
double str_to_num(string str){
	stringstream ss;
	 ss<< str;
	double num;
	ss >> num;
	ss.clear();
	return num;
}
void illeg_out(string str){
	cout << "ERROR: "<<str<<" is not a legal number" << endl;
}
int main(){
	int i,n,j,effnum=0;
	double sum=0,ave,num;
	string buff;
	cin >> n;
	for (i = 0; i < n; i++){
		cin >> buff;
		j = 0;
		if (if_negative(buff[j])){
			j++;
			if (j < buff.size() && if_zero(buff[j])){
				j++;
				if (j < buff.size() && if_dot(buff[j])&&(buff.size()-j-1<=2)){
					j++;
					if (j < buff.size() && if_num(buff, j)){
						num= str_to_num(buff);
						if (num <= 1000 && num >= -1000){
							effnum++;
							sum += num;
						}
						else
							illeg_out(buff);
					}
					else
						illeg_out(buff);
				}
				else
					illeg_out(buff);
			}
			else if (j < buff.size() && if_num(buff, j)){
				num = str_to_num(buff);
				if (num <= 1000 && num >= -1000){
					effnum++;
					sum += num;
				}
				else
					illeg_out(buff);
			}
			else
				illeg_out(buff);
		}
		else if (j < buff.size() && if_zero(buff[j])){
			j++;
			if (j < buff.size() && if_dot(buff[j]) && (buff.size() - j-1 <= 2)){
				j++;
				if (j < buff.size() && if_num(buff, j)){
					sum += str_to_num(buff);
					effnum++;
				}
				else
					illeg_out(buff);
			}
			else if (buff.size() == 1){
				effnum++;
			}
			else
				illeg_out(buff);
		}
		else if (j < buff.size() && if_num(buff, j)){
			num = str_to_num(buff);
			if (num <= 1000 && num >= -1000){
				effnum++;
				sum += num;
			}
			else
				illeg_out(buff);
		}
		else
			illeg_out(buff);
	}
	if (effnum>1){
		ave = sum / effnum;
		printf("The average of %d numbers is %.2lf\n", effnum, ave);
	}
	else if (effnum==1)
		printf("The average of %d number is %.2lf\n", effnum, sum);
	else
		cout << "The average of 0 numbers is Undefined" << endl;
	system("pause");
	return 0;
}
