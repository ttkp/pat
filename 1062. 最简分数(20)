一个分数一般写成两个整数相除的形式：N/M，其中M不为0。最简分数是指分子和分母没有公约数的分数表示形式。

现给定两个不相等的正分数 N1/M1 和 N2/M2，要求你按从小到大的顺序列出它们之间分母为K的最简分数。

输入格式：

输入在一行中按N/M的格式给出两个正分数，随后是一个正整数分母K，其间以空格分隔。题目保证给出的所有整数都不超过1000。

输出格式：

在一行中按N/M的格式列出两个给定分数之间分母为K的所有最简分数，按从小到大的顺序，其间以1个空格分隔。行首尾不得有多余空格。题目保证至少有1个输出。

输入样例：
7/18 13/20 12
输出样例：
5/12 7/12

#include<iostream>
#include<string>
#include <vector>
#include <algorithm>
#include <math.h>
#include <sstream>
#include <functional>
#include<iomanip>
#include<map>
#include<set>

using namespace std;
int main()
{
	int  k, i=1,a,b,c;
	double n1, m1, n2, m2,min, max,buff;
	scanf("%lf/%lf", &n1, &m1);
	scanf("%lf/%lf", &n2, &m2);
	min = n1 / m1;
	max = n2 / m2;
	if (min > max){
		buff = min;
		min = max;
		max = buff;
	}
	cin >> k;
	buff = (double)i / k;
	while (buff <= min){
		i++;
		buff = (double)i / k;
	}
	while (buff < max){
		a = k;
		b = i;
		while (b){
			c = a%b;
			a = b;
			b = c;
		}
		if (a == 1){
			cout << i << "/" << k;
			i++;
			buff = (double)i / k;
			break;
		}
		i++;
		buff = (double)i / k;
	}
	while (buff < max){
		a = k;
		b = i;
		while (b){
			c = a%b;
			a = b;
			b = c;
		}
		if (a == 1){
			cout << " " << i << "/" << k;
		}
		i++;
		buff = (double)i / k;
	}
	system("pause");
}
