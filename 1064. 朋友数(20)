如果两个整数各位数字的和是一样的，则被称为是“朋友数”，而那个公共的和就是它们的“朋友证号”。例如123和51就是朋友数，因为1+2+3 = 5+1 = 6，而6就是它们的朋友证号。给定一些整数，要求你统计一下它们中有多少个不同的朋友证号。注意：我们默认一个整数自己是自己的朋友。

输入格式：

输入第一行给出正整数N。随后一行给出N个正整数，数字间以空格分隔。题目保证所有数字小于104。

输出格式：

首先第一行输出给定数字中不同的朋友证号的个数；随后一行按递增顺序输出这些朋友证号，数字间隔一个空格，且行末不得有多余空格。

输入样例：
8
123 899 51 998 27 33 36 12
输出样例：
4
3 6 9 26

#include<iostream>
#include<string>
#include <vector>
#include <algorithm>
#include <math.h>
#include <sstream>
#include <functional>
#include<iomanip>
#include<map>
#include<set>

using namespace std;
bool compare(const string &a,const string &b){
	return a.compare(b);
}
int main()
{
	int n,m,i;
	string a, b;
	cin >> n;
	map<string, string> couple;
	map<string, int> absent;
	vector<string> num,rel;
	for (i = 0; i < n; i++){
		cin >> a >> b;
		couple[a] = b;
		couple[b] = a;
	}
	cin >> m;
	for (i = 0; i < m; i++){
		cin >> a;
		num.push_back(a);
		if (couple[num[i]] != "")
			absent[couple[num[i]]] = 1;
	}
	for (i = 0; i < m; i++){
		if (!absent[num[i]])
			rel.push_back(num[i]);
	}
	sort(rel.begin(), rel.end());
	cout << rel.size()<<endl;
	if (rel.size()){
		cout << rel[0];
		for (i = 1; i < rel.size(); i++)
			cout <<" "<< rel[i];
	}
	system("pause");
}
